(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{165:function(s,n,t){"use strict";t.r(n);var a=t(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("div",{staticClass:"content"},[t("p",[s._v("vue在进行组建开发过程中，本组建直接操作数据实现数据绑定，父子组件传递通过传参和外传方式传递，在多层组件和同级组件开发过程中，小范围数据状态管理使用vue-bus，或者直接自行建立一个全局变量进行操作。vue的数据通信有时候还是很令人崩溃的。")]),s._v(" "),t("p",[s._v("在进行更大范围vue状态管理或者数据管理时，就可以使用vuex，官方提供的vue集中式状态管理工具了。所以，如果你的应用很简单，就不要用vuex。")]),s._v(" "),t("h1",{attrs:{id:"安装使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装使用","aria-hidden":"true"}},[s._v("#")]),s._v(" 安装使用")]),s._v(" "),t("p",[s._v("直接使用命令进行安装 npm install vuex --save")]),s._v(" "),t("p",[s._v("然后在main.js中加入包的使用：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import vuex from 'vuex'\nVue.use(vuex);\nvar store = new vuex.Store({//store对象\n    state:{\n        count:0\n    }\n})\n\nnew Vue({\n  el: '#app',\n  router,\n  store,//使用store\n  template: '<App/>',\n  components: { App }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("然后就可以在需要的地方使用 $store.state.count 了。")]),s._v(" "),t("p",[s._v("当然这是最最简单的应用，数据模块拆分比较多，想看起来结构清晰的话，也可以进行拆分，拆分之前，先理解了解下vuex里面的核心概念。")]),s._v(" "),t("h1",{attrs:{id:"核心概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心概念","aria-hidden":"true"}},[s._v("#")]),s._v(" 核心概念")]),s._v(" "),t("p",[s._v("任何状态管理或者数据存储的工具，无非就是分为把数据存进去的过程，数据本身，数据输出展示过程，vuex也不例外。上个图，可能跟想象的不太一样")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://vuex.vuejs.org/vuex.png",alt:"image"}})]),s._v(" "),t("p",[s._v("存储过程：")]),s._v(" "),t("p",[s._v("Actions，数据存储进去的前置，操作Mutation，可忽略。")]),s._v(" "),t("p",[s._v("Mutation，唯一可以直接操作State的部分。")]),s._v(" "),t("p",[s._v("数据本身：")]),s._v(" "),t("p",[s._v("State，就属于存储的数据本身了。")]),s._v(" "),t("p",[s._v("Getter，State数据本身可以通过计算进行衍生的数据。")]),s._v(" "),t("p",[s._v("数据取出展示：")]),s._v(" "),t("p",[s._v("数据取出部分就直接在需要的板块进行使用就可以了。通常会在组件的计算属性computed中可以进行进一步过滤操作，然后输出到页面上来。")]),s._v(" "),t("p",[s._v("其他：")]),s._v(" "),t("p",[s._v("Module，vuex由于使用的是单一状态数结构，数据较多时，进行模块拆分时使用。对应里面的所有的部分 state，getter，action，mutation都可以拆分到模块里面去。")]),s._v(" "),t("p",[s._v("了解完核心概念之后，针对复杂应用，我们就可以把store拆掉了。在src文件夹下面新建store文件夹，下方将vuex的每个模块都进行拆分，因为每个模块都有可能会有一大堆数据。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import Vue from 'vue'\nimport Vuex from 'vuex'\nimport state from './state'\nimport mutations from './mutations'\nimport add from './module/add'\n\nVue.use(Vuex)\nexport default new Vuex.Store({\n\tstate,\n\tmutations,\n\tmodules: {\n\t\ta:add\n\t}\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("对应main.js的引用就变化了。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import store from './store'\n\nnew Vue({\n  el: '#app',\n  router,\n  store,//使用store\n  template: '<App/>',\n  components: { App }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("对应的文件结构就变成如下")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://notes.tingno.com/wp-content/uploads/2018/09/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20180930104047.png",alt:"image"}})]),s._v(" "),t("p",[s._v("下面是里面细节板块的使用了。")]),s._v(" "),t("h1",{attrs:{id:"state"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state","aria-hidden":"true"}},[s._v("#")]),s._v(" State")]),s._v(" "),t("p",[s._v("state属于数据中心，内容来源数据初始化，变更来自于mutations，读取的话，通常使用computed属性进行读取。state里面内容变更后会触发计算属性重新获取，并且同步渲染到页面中。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 创建一个 Counter 组件\nconst Counter = {\n  template: `<div>{{ count }}</div>`,\n  computed: {\n    count () {\n      return this.$store.state.count\n    }\n  }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("多条state读取的时候，引入mapState辅助函数。使用之前要import。\n然后在需要的时候直接引入一个数组。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("computed: {\n  ...mapState(['count'])\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("如果引入的元素需要过滤的话，就可以单独处理。")]),s._v(" "),t("p",[s._v("这里要提供一个初始化时候来源数据，可以拓展很多东西，比如来自localStage,database等等。")]),s._v(" "),t("h1",{attrs:{id:"getter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getter","aria-hidden":"true"}},[s._v("#")]),s._v(" Getter")]),s._v(" "),t("p",[s._v("Getter是State元素的派生元素。跟vue里面的computed功能差不多。某些通过计算或者过滤State里面的元素就可以得到的元素，就可以直接使用getter来生成。")]),s._v(" "),t("p",[s._v("举个例子，在State里面存储了一堆学生的成绩，这个时候，就可以使用getter设置计算出对应学生的个数，成绩的总和，平均值，几个及格，几个优秀。在添加新的学生成绩之后，对应的这些数值就都会同步的进行刷新。")]),s._v(" "),t("p",[s._v("当然，上面问题会有很多中方式解决这种问题，上面只是举个这个例子。下面代码的案例就todolist案例，state中只存储所有的数据，对应的过滤元素都可以在getter中取得，代码中放一个计算属性是doneTodos就是过滤之后的元素，在展示的时候，直接使用就可以了")]),s._v(" "),t("p",[s._v("设置方法：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const store = new Vuex.Store({\n  state: {\n    todos: [\n      { id: 1, text: '...', done: true },\n      { id: 2, text: '...', done: false }\n    ]\n  },\n  getters: {\n    doneTodos: state => {\n      return state.todos.filter(todo => todo.done)\n    }\n  }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("在使用的时候，同State类似，直接使用this.$store.getters.doneTodos，就可以了。")]),s._v(" "),t("p",[s._v("getter取值的时候，也可以传递参数进去。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("getters: {\n  // ...\n  getTodoById: (state) => (id) => {\n    return state.todos.find(todo => todo.id === id)\n  }\n}\nstore.getters.getTodoById(2) // -> { id: 2, text: '...', done: false }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("这里，针对访问多个计算属性getter也有一个辅助函数，mapGetters。使用方法类似，也要先引用，后加入computed")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("export default {\n  // ...\n  computed: {\n  // 使用对象展开运算符将 getter 混入 computed 对象中\n    ...mapGetters([\n      'doneTodosCount',\n      'anotherGetter',\n      // ...\n    ])\n  }\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h1",{attrs:{id:"mutation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mutation","aria-hidden":"true"}},[s._v("#")]),s._v(" Mutation")]),s._v(" "),t("p",[s._v("Mutation是同步操作state改变唯一的区域，这里操作state中间再去操作点其他事情就看你自己了，比如变化同步写入localstage，方便浏览器刷新，state取默认值的时候，就可以使用本地数据了，达到优化体验的效果。")]),s._v(" "),t("p",[s._v("基本用例：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const store = new Vuex.Store({\n  state: {\n    count: 1\n  },\n  mutations: {\n    increment (state, n) {\n      // 变更状态\n      state.count += n\n    }\n  }\n})\n\nstore.commit('increment',n)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("提交的方法可以增加参数，参数就参数，官方非要起个载荷（Payload）的名字，不知道为啥。\n需要注意的是，mutations必须是同步的操作。")]),s._v(" "),t("p",[s._v("不过，在mutation里面执行异步操作会怎么样呢？好像也没有发生什么奇怪的事情。官方是建议这么做了。")]),s._v(" "),t("h1",{attrs:{id:"action"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#action","aria-hidden":"true"}},[s._v("#")]),s._v(" Action")]),s._v(" "),t("p",[s._v("在进行多个mutation操作state时，维护起来比较麻烦，就用到了action的功能。action操作的是mutation，而且是可以包含任意的异步操作。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const store = new Vuex.Store({\n  state: {\n    count: 0\n  },\n  mutations: {\n    increment (state) {\n      state.count++\n    }\n  },\n  actions: {\n    increment (context) {\n      context.commit('increment')\n    }\n  }\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("同样，action也有对应的mapAction辅助函数，功能一样的。")]),s._v(" "),t("h1",{attrs:{id:"module"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#module","aria-hidden":"true"}},[s._v("#")]),s._v(" Module")]),s._v(" "),t("p",[s._v("各种方法，生成，数据较多的时候，方便管理就可以使用Module进行模块的拆分。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const moduleA = {\n  state: { ... },\n  mutations: { ... },\n  actions: { ... },\n  getters: { ... }\n}\n\nconst moduleB = {\n  state: { ... },\n  mutations: { ... },\n  actions: { ... }\n}\n\nconst store = new Vuex.Store({\n  modules: {\n    a: moduleA,\n    b: moduleB\n  }\n})\n\nstore.state.a // -> moduleA 的状态\nstore.state.b // -> moduleB 的状态\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("不过，getter，action，mutation默认情况下都是注册在全局命名下。同名的方法在不同模块下调用，会整体进行响应。然后可以通过namespaced: true，和root:true在模块命名的时候全局的变局部的，局部里面声明全局的，来回折腾。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n  actions: {\n    someOtherAction ({dispatch}) {\n      dispatch('someAction')\n    }\n  },\n  modules: {\n    foo: {\n      namespaced: true,\n\n      actions: {\n        someAction: {\n          root: true,\n          handler (namespacedContext, payload) { ... } // -> 'someAction'\n        }\n      }\n    }\n  }\n}\n\ncomputed: {\n  ...mapState({\n    a: state => state.some.nested.module.a,\n    b: state => state.some.nested.module.b\n  })\n},\nmethods: {\n  ...mapActions([\n    'some/nested/module/foo', // -> this['some/nested/module/foo']()\n    'some/nested/module/bar' // -> this['some/nested/module/bar']()\n  ])\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("p",[s._v("由于这一块儿我也没用过，你自行理解吧。更多的还有涉及到动态注册、模块重用等等，插件编写等等。")]),s._v(" "),t("p",[s._v("整个介绍完之后放上官方推荐的文件结构,购物车的例子")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("|── index.html\n├── main.js\n├── api\n│   └── ... # 抽取出API请求\n├── components\n│   ├── App.vue\n│   └── ...\n└── store\n    ├── index.js          # 我们组装模块并导出 store 的地方\n    ├── actions.js        # 根级别的 action\n    ├── mutations.js      # 根级别的 mutation\n    └── modules\n        ├── cart.js       # 购物车模块\n        └── products.js   # 产品模块\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h1",{attrs:{id:"vue-devtools"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-devtools","aria-hidden":"true"}},[s._v("#")]),s._v(" vue-devtools")]),s._v(" "),t("p",[s._v("vue开发强烈推荐使用的浏览器插件工具。尤其可以看到vuex里面这些元素的变化。并且每一步操作之前产生的影响都可以直观的看出来。回头单独介绍安装使用截图等。")]),s._v(" "),t("h1",{attrs:{id:"文末"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文末","aria-hidden":"true"}},[s._v("#")]),s._v(" 文末")]),s._v(" "),t("p",[s._v("到这里，差不多vuex常用的东西都介绍完了。这个能大致了解，就可以去通读vuex的官方文档了。还是要强调，如果你涉及到的数据量比较小，状态管理的东西较少，就不建议使用vuex了。")])])}],!1,null,null,null);e.options.__file="Vuex.md";n.default=e.exports}}]);